{"version":3,"file":"js/252.f8aa9531.js","mappings":"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","sources":["webpack://vue3-nf0/./src/utils/date.js","webpack://vue3-nf0/./src/views/pages/doctor/appointment.vue","webpack://vue3-nf0/./src/views/pages/doctor/appointment.vue?03f1"],"sourcesContent":["/**\n * 日期格式化工具\n */\n\n/**\n * 格式化日期\n * @param {Date|String} date 日期对象或日期字符串\n * @param {String} fmt 格式化字符串 例如: 'yyyy-MM-dd HH:mm:ss'\n * @returns {String} 格式化后的日期字符串\n */\nexport function formatDate(date, fmt) {\n  if (!date) return '';\n  \n  if (typeof date === 'string') {\n    // 尝试转换为日期对象\n    date = new Date(date);\n  }\n  \n  if (!(date instanceof Date) || isNaN(date.getTime())) {\n    console.warn('无效的日期:', date);\n    return '';\n  }\n\n  const o = {\n    'yyyy': date.getFullYear(),\n    'MM': (date.getMonth() + 1).toString().padStart(2, '0'),\n    'dd': date.getDate().toString().padStart(2, '0'),\n    'HH': date.getHours().toString().padStart(2, '0'),\n    'mm': date.getMinutes().toString().padStart(2, '0'),\n    'ss': date.getSeconds().toString().padStart(2, '0')\n  };\n  \n  let result = fmt;\n  for (let k in o) {\n    if (new RegExp(`(${k})`).test(result)) {\n      result = result.replace(RegExp.$1, o[k]);\n    }\n  }\n  \n  return result;\n}\n\n/**\n * 获取日期是星期几\n * @param {Date} date 日期对象\n * @returns {String} 星期几\n */\nexport function getWeekDay(date) {\n  if (!date) return '';\n  \n  const weekDays = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'];\n  return weekDays[date.getDay()];\n}\n\n/**\n * 日期比较\n * @param {Date|String} date1 日期1\n * @param {Date|String} date2 日期2\n * @returns {Number} 1: date1 > date2, 0: date1 = date2, -1: date1 < date2\n */\nexport function compareDate(date1, date2) {\n  const d1 = new Date(date1).getTime();\n  const d2 = new Date(date2).getTime();\n  \n  if (d1 > d2) return 1;\n  if (d1 === d2) return 0;\n  return -1;\n} ","<template>\n  <div class=\"appointment-page\">\n    <div class=\"section_title\">\n      <span>医生预约</span>\n    </div>\n    \n    <el-card class=\"appointment-card\">\n      <div class=\"appointment-info\">\n        <el-alert\n          title=\"根据您的测试结果，建议您进行专业医生诊断\"\n          type=\"info\"\n          description=\"我们的专业医生团队将为您提供个性化的诊断和治疗方案\"\n          show-icon\n          :closable=\"false\">\n        </el-alert>\n      </div>\n      \n      <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\" label-width=\"120px\" class=\"appointment-form\">\n        <el-form-item label=\"姓名\" prop=\"name\">\n          <el-input v-model=\"form.name\" placeholder=\"请输入您的姓名\"></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"联系电话\" prop=\"phone\">\n          <el-input v-model=\"form.phone\" placeholder=\"请输入您的联系电话\"></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"咨询师\" prop=\"doctor\">\n          <el-select v-model=\"form.doctor\" placeholder=\"请选择咨询师\" style=\"width: 100%\" @change=\"doctorChanged\">\n            <el-option \n              v-for=\"doctor in doctorList\" \n              :key=\"doctor.value\" \n              :label=\"doctor.label\" \n              :value=\"doctor.value\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"预约日期\" prop=\"date\">\n          <el-date-picker\n            v-model=\"form.date\"\n            type=\"date\"\n            placeholder=\"选择预约日期\"\n            :disabled-date=\"disabledDate\"\n            @change=\"loadAvailableTimeSlots\"\n            style=\"width: 100%\">\n          </el-date-picker>\n        </el-form-item>\n        \n        <el-form-item label=\"预约时段\" prop=\"timeSlot\">\n          <el-select v-model=\"form.timeSlot\" placeholder=\"请选择预约时段\" style=\"width: 100%\" :disabled=\"!form.date || !form.doctor\">\n            <el-option \n              v-for=\"slot in availableTimeSlots\" \n              :key=\"slot\" \n              :label=\"slot\" \n              :value=\"slot\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"症状描述\" prop=\"description\">\n          <el-input\n            type=\"textarea\"\n            v-model=\"form.description\"\n            placeholder=\"请简要描述您的症状或问题\"\n            :rows=\"4\">\n          </el-input>\n        </el-form-item>\n        \n        <el-form-item>\n          <el-button type=\"primary\" @click=\"submitForm\">提交预约</el-button>\n          <el-button @click=\"resetForm\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, getCurrentInstance, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport { formatDate } from '@/utils/date'\n\nconst router = useRouter()\nconst context = getCurrentInstance()?.appContext.config.globalProperties\nconst formRef = ref(null)\nconst availableTimeSlots = ref([])\nconst doctorList = ref([\n  { value: '咨询师账号1', label: '王医生 (心理咨询)' },\n  { value: '咨询师账号2', label: '张医生 (精神科)' },\n  { value: '咨询师账号3', label: '李医生 (心理治疗)' }\n])\n\n// 表单数据\nconst form = reactive({\n  name: '',\n  phone: '',\n  doctor: '',\n  date: '',\n  timeSlot: '',\n  description: ''\n})\n\n// 表单验证规则\nconst rules = {\n  name: [\n    { required: true, message: '请输入姓名', trigger: 'blur' }\n  ],\n  phone: [\n    { required: true, message: '请输入联系电话', trigger: 'blur' },\n    { pattern: /^1[3-9]\\d{9}$/, message: '请输入正确的手机号码', trigger: 'blur' }\n  ],\n  doctor: [\n    { required: true, message: '请选择咨询师', trigger: 'change' }\n  ],\n  date: [\n    { required: true, message: '请选择预约日期', trigger: 'change' }\n  ],\n  timeSlot: [\n    { required: true, message: '请选择预约时段', trigger: 'change' }\n  ],\n  description: [\n    { required: true, message: '请描述您的症状', trigger: 'blur' }\n  ]\n}\n\n// 当咨询师改变时，清空日期和时间段\nconst doctorChanged = () => {\n  form.date = ''\n  form.timeSlot = ''\n  availableTimeSlots.value = []\n}\n\n// 加载医生列表\nconst loadDoctorList = () => {\n  // 实际应该从后端API获取医生列表\n  context?.$http({\n    url: '/zixunshi/list', // 假设这是获取咨询师列表的API\n    method: 'GET'\n  }).then(res => {\n    if (res.data && res.data.code === 0 && res.data.data) {\n      // 如果API成功返回数据，更新医生列表\n      doctorList.value = res.data.data.map(item => ({\n        value: item.zhanghao, // 咨询师账号\n        label: `${item.xingming} (${item.keshi || '咨询师'})` // 名称+科室\n      }))\n    }\n  }).catch(err => {\n    console.error('获取咨询师列表失败:', err)\n    // 保留默认列表\n  })\n}\n\n// 加载可用时间段\nconst loadAvailableTimeSlots = () => {\n  if (!form.date || !form.doctor) {\n    availableTimeSlots.value = []\n    return\n  }\n  \n  const formattedDate = formatDate(form.date, 'yyyy-MM-dd')\n  \n  // 调用后端API获取可用时间段\n  context?.$http({\n    url: `/zixunshiyuyue/getAvailableTimeSlots?date=${formattedDate}&zixunshizhanghao=${form.doctor}`,\n    method: 'GET'\n  }).then(res => {\n    if (res.data && res.data.code === 0) {\n      availableTimeSlots.value = res.data.data || []\n      if (availableTimeSlots.value.length === 0) {\n        ElMessage.warning('该日期暂无可用预约时段')\n      }\n    } else {\n      ElMessage.error(res.data.msg || '获取可用时间段失败')\n      availableTimeSlots.value = []\n    }\n  }).catch(err => {\n    console.error('获取时间段出错:', err)\n    ElMessage.error('获取可用时间段失败，请稍后重试')\n    availableTimeSlots.value = []\n  })\n}\n\n// 禁用过去的日期\nconst disabledDate = (time) => {\n  return time.getTime() < Date.now() - 8.64e7 // 禁用今天之前的日期\n}\n\n// 提交表单\nconst submitForm = () => {\n  formRef.value.validate((valid) => {\n    if (valid) {\n      console.log('提交表单数据:', form); // 添加日志\n      \n      // 构建预约数据\n      const appointmentData = {\n        zixunshizhanghao: form.doctor,\n        lianxifangshi: form.phone,\n        yuyuezixunshijian: formatDate(form.date, 'yyyy-MM-dd'),\n        timeSlot: form.timeSlot,\n        yuyuebeizhu: form.description,\n        zhanghao: localStorage.getItem('userid') || '', // 从localStorage获取用户ID\n        shouji: form.phone,\n        sfsh: '待审核',\n        status: '待确认'\n      }\n      \n      console.log('发送到后端的数据:', appointmentData); // 添加日志\n      \n      // 提交预约\n      context?.$http({\n        url: '/zixunshiyuyue/save',\n        method: 'POST',\n        data: appointmentData\n      }).then(res => {\n        console.log('后端返回结果:', res.data); // 添加日志\n        if (res.data && res.data.code === 0) {\n          ElMessage.success('预约成功！我们的医生会尽快与您联系')\n          setTimeout(() => {\n            router.push('/index/home')  // 修改为正确的首页路径\n          }, 1500)\n        } else {\n          ElMessage.error(res.data.msg || '预约失败，请稍后重试')\n        }\n      }).catch(err => {\n        console.error('预约提交出错:', err)\n        ElMessage.error('预约失败，请稍后重试')\n      })\n    } else {\n      ElMessage.error('请完善表单信息')\n      return false\n    }\n  })\n}\n\n// 重置表单\nconst resetForm = () => {\n  formRef.value.resetFields()\n  availableTimeSlots.value = []\n}\n\n// 页面加载时获取医生列表\nonMounted(() => {\n  loadDoctorList()\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.appointment-page {\n  padding: 20px;\n  \n  .section_title {\n    margin-bottom: 20px;\n    font-size: 20px;\n    font-weight: bold;\n  }\n  \n  .appointment-card {\n    max-width: 800px;\n    margin: 0 auto;\n    \n    .appointment-info {\n      margin-bottom: 30px;\n    }\n    \n    .appointment-form {\n      margin-top: 20px;\n    }\n  }\n}\n</style> ","import script from \"./appointment.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./appointment.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./appointment.vue?vue&type=style&index=0&id=e529eeca&lang=scss&scoped=true\"\n\nimport exportComponent from \"/Users/liuxiaodong/Desktop/bishe/client_code/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e529eeca\"]])\n\nexport default __exports__"],"names":["formatDate","date","fmt","Date","isNaN","getTime","console","warn","o","getFullYear","getMonth","toString","padStart","getDate","getHours","getMinutes","getSeconds","result","k","RegExp","test","replace","$1","router","useRouter","context","getCurrentInstance","appContext","config","globalProperties","formRef","ref","availableTimeSlots","doctorList","value","label","form","reactive","name","phone","doctor","timeSlot","description","rules","required","message","trigger","pattern","doctorChanged","loadDoctorList","$http","url","method","then","res","data","code","map","item","zhanghao","xingming","keshi","catch","err","error","loadAvailableTimeSlots","formattedDate","length","ElMessage","msg","disabledDate","time","now","submitForm","validate","valid","log","appointmentData","zixunshizhanghao","lianxifangshi","yuyuezixunshijian","yuyuebeizhu","localStorage","getItem","shouji","sfsh","status","setTimeout","push","resetForm","resetFields","onMounted","__exports__"],"sourceRoot":""}